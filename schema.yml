openapi: 3.0.3
info:
  title: Ecommerce API Project
  version: 1.0.0
  description: An Ecommerce API project
paths:
  /api/v1/cart:
    get:
      operationId: api_v1_cart_retrieve
      description: Returns the user's current cart.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_cart_create
      description: |-
        Adds a product to the user's cart upon receiving a valid POST request.

        Returns a response with the updated cart.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_cart_destroy
      description: |-
        Removes a product from the user's cart upon receiving a valid DELETE request.

        Returns a response indicating the operation's success or failure.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/login:
    post:
      operationId: api_v1_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/order:
    get:
      operationId: api_v1_order_retrieve
      description: Returns a specific order if an ID is provided, otherwise all the
        user's orders.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: |-
        Creates a new order upon receiving a valid POST request.

        Returns a response with the new order ID.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/order/{id}/:
    get:
      operationId: api_v1_order_retrieve_2
      description: Returns a specific order if an ID is provided, otherwise all the
        user's orders.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create_2
      description: |-
        Creates a new order upon receiving a valid POST request.

        Returns a response with the new order ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/products:
    get:
      operationId: api_v1_products_list
      description: |-
        API view for retrieving product list.

        Uses JWT for authentication.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/register:
    post:
      operationId: api_v1_register_create
      description: |-
        Creates a new user upon receiving a valid POST request.

        Returns a response with HTTP 201 status on success, otherwise HTTP 400.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/token/refresh:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Product:
      type: object
      description: Serializer for the Product model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
      required:
      - id
      - name
      - price
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
